
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000090c  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000ab4  08000abc  00010abc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000ab4  08000ab4  00010abc  2**0
                  CONTENTS
  4 .ARM          00000000  08000ab4  08000ab4  00010abc  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000ab4  08000abc  00010abc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000ab4  08000ab4  00010ab4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000ab8  08000ab8  00010ab8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010abc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000abc  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000abc  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010abc  2**0
                  CONTENTS, READONLY
 12 .debug_info   000012a9  00000000  00000000  00010aec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000374  00000000  00000000  00011d95  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c8  00000000  00000000  00012110  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000a0  00000000  00000000  000121d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001d86  00000000  00000000  00012278  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001001  00000000  00000000  00013ffe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00008ad5  00000000  00000000  00014fff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0001dad4  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000288  00000000  00000000  0001db28  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000a9c 	.word	0x08000a9c

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000a9c 	.word	0x08000a9c

080001e8 <delay>:
#include "stm32f407xx_gpio_driver.h"
#include <string.h>

/* Some delay */
void delay(void)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
	/* This will introduce ~200ms delay when system clock is 16MHz */
	for (uint32_t i = 0; i < 500000 / 2; ++i);
 80001ee:	2300      	movs	r3, #0
 80001f0:	607b      	str	r3, [r7, #4]
 80001f2:	e002      	b.n	80001fa <delay+0x12>
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	3301      	adds	r3, #1
 80001f8:	607b      	str	r3, [r7, #4]
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a04      	ldr	r2, [pc, #16]	; (8000210 <delay+0x28>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d9f8      	bls.n	80001f4 <delay+0xc>
}
 8000202:	bf00      	nop
 8000204:	bf00      	nop
 8000206:	370c      	adds	r7, #12
 8000208:	46bd      	mov	sp, r7
 800020a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800020e:	4770      	bx	lr
 8000210:	0003d08f 	.word	0x0003d08f

08000214 <EXTI0_IRQHandler>:

void EXTI0_IRQHandler(void)
{
 8000214:	b580      	push	{r7, lr}
 8000216:	af00      	add	r7, sp, #0
	delay(); // For button debouncing
 8000218:	f7ff ffe6 	bl	80001e8 <delay>
 	GPIO_IRQHandling(GPIO_PIN_NO_0); // Clear the pending event from EXTI line
 800021c:	2000      	movs	r0, #0
 800021e:	f000 fbf1 	bl	8000a04 <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_14); // Toggle the LED
 8000222:	210e      	movs	r1, #14
 8000224:	4802      	ldr	r0, [pc, #8]	; (8000230 <EXTI0_IRQHandler+0x1c>)
 8000226:	f000 fb27 	bl	8000878 <GPIO_ToggleOutputPin>
}
 800022a:	bf00      	nop
 800022c:	bd80      	pop	{r7, pc}
 800022e:	bf00      	nop
 8000230:	40020c00 	.word	0x40020c00

08000234 <main>:

int main()
{
 8000234:	b580      	push	{r7, lr}
 8000236:	b086      	sub	sp, #24
 8000238:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLedRed, GpioBtn;

	/* Resetting the GPIO handles */
	memset(&GpioLedRed, 0, sizeof(GpioLedRed));
 800023a:	f107 030c 	add.w	r3, r7, #12
 800023e:	220c      	movs	r2, #12
 8000240:	2100      	movs	r1, #0
 8000242:	4618      	mov	r0, r3
 8000244:	f000 fc22 	bl	8000a8c <memset>
	memset(&GpioBtn, 0, sizeof(GpioBtn));
 8000248:	463b      	mov	r3, r7
 800024a:	220c      	movs	r2, #12
 800024c:	2100      	movs	r1, #0
 800024e:	4618      	mov	r0, r3
 8000250:	f000 fc1c 	bl	8000a8c <memset>

	/* Populate the GPIO handle for LED connected to PD14 */
	GpioLedRed.pGPIOx = GPIOD;
 8000254:	4b18      	ldr	r3, [pc, #96]	; (80002b8 <main+0x84>)
 8000256:	60fb      	str	r3, [r7, #12]
	GpioLedRed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_14;
 8000258:	230e      	movs	r3, #14
 800025a:	743b      	strb	r3, [r7, #16]
	GpioLedRed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800025c:	2301      	movs	r3, #1
 800025e:	747b      	strb	r3, [r7, #17]
	GpioLedRed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000260:	2302      	movs	r3, #2
 8000262:	74bb      	strb	r3, [r7, #18]
	GpioLedRed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000264:	2300      	movs	r3, #0
 8000266:	753b      	strb	r3, [r7, #20]
	GpioLedRed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000268:	2300      	movs	r3, #0
 800026a:	74fb      	strb	r3, [r7, #19]

	/* Enable the peripheral clk for GPIOD (LED) */
	GPIO_PeriClockControl(GpioLedRed.pGPIOx, ENABLE);
 800026c:	68fb      	ldr	r3, [r7, #12]
 800026e:	2101      	movs	r1, #1
 8000270:	4618      	mov	r0, r3
 8000272:	f000 f84f 	bl	8000314 <GPIO_PeriClockControl>

	/* Initialise the GPIOD */
	GPIO_Init(&GpioLedRed);
 8000276:	f107 030c 	add.w	r3, r7, #12
 800027a:	4618      	mov	r0, r3
 800027c:	f000 f91a 	bl	80004b4 <GPIO_Init>

	/* Populate the GPIO handle for button connected to PA0 */
	GpioBtn.pGPIOx = GPIOA;
 8000280:	4b0e      	ldr	r3, [pc, #56]	; (80002bc <main+0x88>)
 8000282:	603b      	str	r3, [r7, #0]
	GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 8000284:	2300      	movs	r3, #0
 8000286:	713b      	strb	r3, [r7, #4]
	GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 8000288:	2304      	movs	r3, #4
 800028a:	717b      	strb	r3, [r7, #5]
	GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800028c:	2302      	movs	r3, #2
 800028e:	71bb      	strb	r3, [r7, #6]
	GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000290:	2300      	movs	r3, #0
 8000292:	71fb      	strb	r3, [r7, #7]

	/* Enable the peripheral clk for GPIOA (Button) */
	GPIO_PeriClockControl(GpioBtn.pGPIOx, ENABLE);
 8000294:	683b      	ldr	r3, [r7, #0]
 8000296:	2101      	movs	r1, #1
 8000298:	4618      	mov	r0, r3
 800029a:	f000 f83b 	bl	8000314 <GPIO_PeriClockControl>

	/* Initialise the GPIOD */
	GPIO_Init(&GpioBtn);
 800029e:	463b      	mov	r3, r7
 80002a0:	4618      	mov	r0, r3
 80002a2:	f000 f907 	bl	80004b4 <GPIO_Init>

	/* IRQ priority */
	GPIO_IRQPriorityConfig(IRQ_NO_EXTI0, NVIC_IRQ_PRIO15);
 80002a6:	210f      	movs	r1, #15
 80002a8:	2006      	movs	r0, #6
 80002aa:	f000 fb81 	bl	80009b0 <GPIO_IRQPriorityConfig>

	/* IRQ configuaration */
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI0, ENABLE);
 80002ae:	2101      	movs	r1, #1
 80002b0:	2006      	movs	r0, #6
 80002b2:	f000 faf7 	bl	80008a4 <GPIO_IRQInterruptConfig>

	while(1);
 80002b6:	e7fe      	b.n	80002b6 <main+0x82>
 80002b8:	40020c00 	.word	0x40020c00
 80002bc:	40020000 	.word	0x40020000

080002c0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002c0:	480d      	ldr	r0, [pc, #52]	; (80002f8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002c2:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002c4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002c8:	480c      	ldr	r0, [pc, #48]	; (80002fc <LoopForever+0x6>)
  ldr r1, =_edata
 80002ca:	490d      	ldr	r1, [pc, #52]	; (8000300 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002cc:	4a0d      	ldr	r2, [pc, #52]	; (8000304 <LoopForever+0xe>)
  movs r3, #0
 80002ce:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002d0:	e002      	b.n	80002d8 <LoopCopyDataInit>

080002d2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002d2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002d4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002d6:	3304      	adds	r3, #4

080002d8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002d8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002da:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002dc:	d3f9      	bcc.n	80002d2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002de:	4a0a      	ldr	r2, [pc, #40]	; (8000308 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002e0:	4c0a      	ldr	r4, [pc, #40]	; (800030c <LoopForever+0x16>)
  movs r3, #0
 80002e2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002e4:	e001      	b.n	80002ea <LoopFillZerobss>

080002e6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002e6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002e8:	3204      	adds	r2, #4

080002ea <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ea:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002ec:	d3fb      	bcc.n	80002e6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002ee:	f000 fba9 	bl	8000a44 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002f2:	f7ff ff9f 	bl	8000234 <main>

080002f6 <LoopForever>:

LoopForever:
    b LoopForever
 80002f6:	e7fe      	b.n	80002f6 <LoopForever>
  ldr   r0, =_estack
 80002f8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002fc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000300:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000304:	08000abc 	.word	0x08000abc
  ldr r2, =_sbss
 8000308:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800030c:	2000001c 	.word	0x2000001c

08000310 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000310:	e7fe      	b.n	8000310 <ADC_IRQHandler>
	...

08000314 <GPIO_PeriClockControl>:
 * @return            -  none
 *
 * @Note              -  none
 */
void GPIO_PeriClockControl(GPIO_RegDef_t* pGPIOx, uint8_t EnorDi)
{
 8000314:	b480      	push	{r7}
 8000316:	b083      	sub	sp, #12
 8000318:	af00      	add	r7, sp, #0
 800031a:	6078      	str	r0, [r7, #4]
 800031c:	460b      	mov	r3, r1
 800031e:	70fb      	strb	r3, [r7, #3]
	if (EnorDi == ENABLE)
 8000320:	78fb      	ldrb	r3, [r7, #3]
 8000322:	2b01      	cmp	r3, #1
 8000324:	d157      	bne.n	80003d6 <GPIO_PeriClockControl+0xc2>
	{
		if (pGPIOx == GPIOA)
 8000326:	687b      	ldr	r3, [r7, #4]
 8000328:	4a59      	ldr	r2, [pc, #356]	; (8000490 <GPIO_PeriClockControl+0x17c>)
 800032a:	4293      	cmp	r3, r2
 800032c:	d106      	bne.n	800033c <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 800032e:	4b59      	ldr	r3, [pc, #356]	; (8000494 <GPIO_PeriClockControl+0x180>)
 8000330:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000332:	4a58      	ldr	r2, [pc, #352]	; (8000494 <GPIO_PeriClockControl+0x180>)
 8000334:	f043 0301 	orr.w	r3, r3, #1
 8000338:	6313      	str	r3, [r2, #48]	; 0x30
		else if (pGPIOx == GPIOH)
		{
			GPIOH_PCLK_DI();
		}
	}
}
 800033a:	e0a3      	b.n	8000484 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOB)
 800033c:	687b      	ldr	r3, [r7, #4]
 800033e:	4a56      	ldr	r2, [pc, #344]	; (8000498 <GPIO_PeriClockControl+0x184>)
 8000340:	4293      	cmp	r3, r2
 8000342:	d106      	bne.n	8000352 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000344:	4b53      	ldr	r3, [pc, #332]	; (8000494 <GPIO_PeriClockControl+0x180>)
 8000346:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000348:	4a52      	ldr	r2, [pc, #328]	; (8000494 <GPIO_PeriClockControl+0x180>)
 800034a:	f043 0302 	orr.w	r3, r3, #2
 800034e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000350:	e098      	b.n	8000484 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOC)
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	4a51      	ldr	r2, [pc, #324]	; (800049c <GPIO_PeriClockControl+0x188>)
 8000356:	4293      	cmp	r3, r2
 8000358:	d106      	bne.n	8000368 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800035a:	4b4e      	ldr	r3, [pc, #312]	; (8000494 <GPIO_PeriClockControl+0x180>)
 800035c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800035e:	4a4d      	ldr	r2, [pc, #308]	; (8000494 <GPIO_PeriClockControl+0x180>)
 8000360:	f043 0304 	orr.w	r3, r3, #4
 8000364:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000366:	e08d      	b.n	8000484 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOD)
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	4a4d      	ldr	r2, [pc, #308]	; (80004a0 <GPIO_PeriClockControl+0x18c>)
 800036c:	4293      	cmp	r3, r2
 800036e:	d106      	bne.n	800037e <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000370:	4b48      	ldr	r3, [pc, #288]	; (8000494 <GPIO_PeriClockControl+0x180>)
 8000372:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000374:	4a47      	ldr	r2, [pc, #284]	; (8000494 <GPIO_PeriClockControl+0x180>)
 8000376:	f043 0308 	orr.w	r3, r3, #8
 800037a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800037c:	e082      	b.n	8000484 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOE)
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	4a48      	ldr	r2, [pc, #288]	; (80004a4 <GPIO_PeriClockControl+0x190>)
 8000382:	4293      	cmp	r3, r2
 8000384:	d106      	bne.n	8000394 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000386:	4b43      	ldr	r3, [pc, #268]	; (8000494 <GPIO_PeriClockControl+0x180>)
 8000388:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800038a:	4a42      	ldr	r2, [pc, #264]	; (8000494 <GPIO_PeriClockControl+0x180>)
 800038c:	f043 0310 	orr.w	r3, r3, #16
 8000390:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000392:	e077      	b.n	8000484 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOF)
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	4a44      	ldr	r2, [pc, #272]	; (80004a8 <GPIO_PeriClockControl+0x194>)
 8000398:	4293      	cmp	r3, r2
 800039a:	d106      	bne.n	80003aa <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 800039c:	4b3d      	ldr	r3, [pc, #244]	; (8000494 <GPIO_PeriClockControl+0x180>)
 800039e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a0:	4a3c      	ldr	r2, [pc, #240]	; (8000494 <GPIO_PeriClockControl+0x180>)
 80003a2:	f043 0320 	orr.w	r3, r3, #32
 80003a6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a8:	e06c      	b.n	8000484 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOG)
 80003aa:	687b      	ldr	r3, [r7, #4]
 80003ac:	4a3f      	ldr	r2, [pc, #252]	; (80004ac <GPIO_PeriClockControl+0x198>)
 80003ae:	4293      	cmp	r3, r2
 80003b0:	d106      	bne.n	80003c0 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 80003b2:	4b38      	ldr	r3, [pc, #224]	; (8000494 <GPIO_PeriClockControl+0x180>)
 80003b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b6:	4a37      	ldr	r2, [pc, #220]	; (8000494 <GPIO_PeriClockControl+0x180>)
 80003b8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003bc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003be:	e061      	b.n	8000484 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOH)
 80003c0:	687b      	ldr	r3, [r7, #4]
 80003c2:	4a3b      	ldr	r2, [pc, #236]	; (80004b0 <GPIO_PeriClockControl+0x19c>)
 80003c4:	4293      	cmp	r3, r2
 80003c6:	d15d      	bne.n	8000484 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_EN();
 80003c8:	4b32      	ldr	r3, [pc, #200]	; (8000494 <GPIO_PeriClockControl+0x180>)
 80003ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003cc:	4a31      	ldr	r2, [pc, #196]	; (8000494 <GPIO_PeriClockControl+0x180>)
 80003ce:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003d2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d4:	e056      	b.n	8000484 <GPIO_PeriClockControl+0x170>
		if (pGPIOx == GPIOA)
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	4a2d      	ldr	r2, [pc, #180]	; (8000490 <GPIO_PeriClockControl+0x17c>)
 80003da:	4293      	cmp	r3, r2
 80003dc:	d106      	bne.n	80003ec <GPIO_PeriClockControl+0xd8>
			GPIOA_PCLK_DI();
 80003de:	4b2d      	ldr	r3, [pc, #180]	; (8000494 <GPIO_PeriClockControl+0x180>)
 80003e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e2:	4a2c      	ldr	r2, [pc, #176]	; (8000494 <GPIO_PeriClockControl+0x180>)
 80003e4:	f023 0302 	bic.w	r3, r3, #2
 80003e8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ea:	e04b      	b.n	8000484 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOB)
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	4a2a      	ldr	r2, [pc, #168]	; (8000498 <GPIO_PeriClockControl+0x184>)
 80003f0:	4293      	cmp	r3, r2
 80003f2:	d106      	bne.n	8000402 <GPIO_PeriClockControl+0xee>
			GPIOB_PCLK_DI();
 80003f4:	4b27      	ldr	r3, [pc, #156]	; (8000494 <GPIO_PeriClockControl+0x180>)
 80003f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003f8:	4a26      	ldr	r2, [pc, #152]	; (8000494 <GPIO_PeriClockControl+0x180>)
 80003fa:	f023 0302 	bic.w	r3, r3, #2
 80003fe:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000400:	e040      	b.n	8000484 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOC)
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	4a25      	ldr	r2, [pc, #148]	; (800049c <GPIO_PeriClockControl+0x188>)
 8000406:	4293      	cmp	r3, r2
 8000408:	d106      	bne.n	8000418 <GPIO_PeriClockControl+0x104>
			GPIOC_PCLK_DI();
 800040a:	4b22      	ldr	r3, [pc, #136]	; (8000494 <GPIO_PeriClockControl+0x180>)
 800040c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800040e:	4a21      	ldr	r2, [pc, #132]	; (8000494 <GPIO_PeriClockControl+0x180>)
 8000410:	f023 0304 	bic.w	r3, r3, #4
 8000414:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000416:	e035      	b.n	8000484 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOD)
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	4a21      	ldr	r2, [pc, #132]	; (80004a0 <GPIO_PeriClockControl+0x18c>)
 800041c:	4293      	cmp	r3, r2
 800041e:	d106      	bne.n	800042e <GPIO_PeriClockControl+0x11a>
			GPIOD_PCLK_DI();
 8000420:	4b1c      	ldr	r3, [pc, #112]	; (8000494 <GPIO_PeriClockControl+0x180>)
 8000422:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000424:	4a1b      	ldr	r2, [pc, #108]	; (8000494 <GPIO_PeriClockControl+0x180>)
 8000426:	f023 0308 	bic.w	r3, r3, #8
 800042a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800042c:	e02a      	b.n	8000484 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOE)
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	4a1c      	ldr	r2, [pc, #112]	; (80004a4 <GPIO_PeriClockControl+0x190>)
 8000432:	4293      	cmp	r3, r2
 8000434:	d106      	bne.n	8000444 <GPIO_PeriClockControl+0x130>
			GPIOE_PCLK_DI();
 8000436:	4b17      	ldr	r3, [pc, #92]	; (8000494 <GPIO_PeriClockControl+0x180>)
 8000438:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800043a:	4a16      	ldr	r2, [pc, #88]	; (8000494 <GPIO_PeriClockControl+0x180>)
 800043c:	f023 0310 	bic.w	r3, r3, #16
 8000440:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000442:	e01f      	b.n	8000484 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOF)
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	4a18      	ldr	r2, [pc, #96]	; (80004a8 <GPIO_PeriClockControl+0x194>)
 8000448:	4293      	cmp	r3, r2
 800044a:	d106      	bne.n	800045a <GPIO_PeriClockControl+0x146>
			GPIOF_PCLK_DI();
 800044c:	4b11      	ldr	r3, [pc, #68]	; (8000494 <GPIO_PeriClockControl+0x180>)
 800044e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000450:	4a10      	ldr	r2, [pc, #64]	; (8000494 <GPIO_PeriClockControl+0x180>)
 8000452:	f023 0320 	bic.w	r3, r3, #32
 8000456:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000458:	e014      	b.n	8000484 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOG)
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	4a13      	ldr	r2, [pc, #76]	; (80004ac <GPIO_PeriClockControl+0x198>)
 800045e:	4293      	cmp	r3, r2
 8000460:	d106      	bne.n	8000470 <GPIO_PeriClockControl+0x15c>
			GPIOG_PCLK_DI();
 8000462:	4b0c      	ldr	r3, [pc, #48]	; (8000494 <GPIO_PeriClockControl+0x180>)
 8000464:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000466:	4a0b      	ldr	r2, [pc, #44]	; (8000494 <GPIO_PeriClockControl+0x180>)
 8000468:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800046c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800046e:	e009      	b.n	8000484 <GPIO_PeriClockControl+0x170>
		else if (pGPIOx == GPIOH)
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	4a0f      	ldr	r2, [pc, #60]	; (80004b0 <GPIO_PeriClockControl+0x19c>)
 8000474:	4293      	cmp	r3, r2
 8000476:	d105      	bne.n	8000484 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_DI();
 8000478:	4b06      	ldr	r3, [pc, #24]	; (8000494 <GPIO_PeriClockControl+0x180>)
 800047a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800047c:	4a05      	ldr	r2, [pc, #20]	; (8000494 <GPIO_PeriClockControl+0x180>)
 800047e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000482:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000484:	bf00      	nop
 8000486:	370c      	adds	r7, #12
 8000488:	46bd      	mov	sp, r7
 800048a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800048e:	4770      	bx	lr
 8000490:	40020000 	.word	0x40020000
 8000494:	40023800 	.word	0x40023800
 8000498:	40020400 	.word	0x40020400
 800049c:	40020800 	.word	0x40020800
 80004a0:	40020c00 	.word	0x40020c00
 80004a4:	40021000 	.word	0x40021000
 80004a8:	40021400 	.word	0x40021400
 80004ac:	40021800 	.word	0x40021800
 80004b0:	40021c00 	.word	0x40021c00

080004b4 <GPIO_Init>:
 *
 * @Note              -  none
 */

void GPIO_Init(GPIO_Handle_t* pGPIOHandle)
{
 80004b4:	b480      	push	{r7}
 80004b6:	b087      	sub	sp, #28
 80004b8:	af00      	add	r7, sp, #0
 80004ba:	6078      	str	r0, [r7, #4]
	uint32_t val = 0;
 80004bc:	2300      	movs	r3, #0
 80004be:	617b      	str	r3, [r7, #20]

	/* 1. Configure the mode of the pin */
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	795b      	ldrb	r3, [r3, #5]
 80004c4:	2b03      	cmp	r3, #3
 80004c6:	d822      	bhi.n	800050e <GPIO_Init+0x5a>
	{
		val = pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	795b      	ldrb	r3, [r3, #5]
 80004cc:	461a      	mov	r2, r3
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	791b      	ldrb	r3, [r3, #4]
 80004d2:	005b      	lsls	r3, r3, #1
 80004d4:	fa02 f303 	lsl.w	r3, r2, r3
 80004d8:	617b      	str	r3, [r7, #20]
		/* Clearing */
		pGPIOHandle->pGPIOx->MODER &= ~( 0x03 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	681b      	ldr	r3, [r3, #0]
 80004de:	681a      	ldr	r2, [r3, #0]
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	791b      	ldrb	r3, [r3, #4]
 80004e4:	005b      	lsls	r3, r3, #1
 80004e6:	2103      	movs	r1, #3
 80004e8:	fa01 f303 	lsl.w	r3, r1, r3
 80004ec:	43db      	mvns	r3, r3
 80004ee:	4619      	mov	r1, r3
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	681b      	ldr	r3, [r3, #0]
 80004f4:	400a      	ands	r2, r1
 80004f6:	601a      	str	r2, [r3, #0]
		/* Setting */
		pGPIOHandle->pGPIOx->MODER |= val;
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	681b      	ldr	r3, [r3, #0]
 80004fc:	6819      	ldr	r1, [r3, #0]
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	681b      	ldr	r3, [r3, #0]
 8000502:	697a      	ldr	r2, [r7, #20]
 8000504:	430a      	orrs	r2, r1
 8000506:	601a      	str	r2, [r3, #0]
		val = 0;
 8000508:	2300      	movs	r3, #0
 800050a:	617b      	str	r3, [r7, #20]
 800050c:	e10a      	b.n	8000724 <GPIO_Init+0x270>
	}
	else /* Interrupt Mode */
	{
		if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	795b      	ldrb	r3, [r3, #5]
 8000512:	2b04      	cmp	r3, #4
 8000514:	d123      	bne.n	800055e <GPIO_Init+0xaa>
		{
			/* 1. Configure the FTSR */
			/* Clearing */
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000516:	4b5f      	ldr	r3, [pc, #380]	; (8000694 <GPIO_Init+0x1e0>)
 8000518:	68db      	ldr	r3, [r3, #12]
 800051a:	687a      	ldr	r2, [r7, #4]
 800051c:	7912      	ldrb	r2, [r2, #4]
 800051e:	4611      	mov	r1, r2
 8000520:	2201      	movs	r2, #1
 8000522:	408a      	lsls	r2, r1
 8000524:	43d2      	mvns	r2, r2
 8000526:	4611      	mov	r1, r2
 8000528:	4a5a      	ldr	r2, [pc, #360]	; (8000694 <GPIO_Init+0x1e0>)
 800052a:	400b      	ands	r3, r1
 800052c:	60d3      	str	r3, [r2, #12]
			/* Setting */
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800052e:	4b59      	ldr	r3, [pc, #356]	; (8000694 <GPIO_Init+0x1e0>)
 8000530:	68db      	ldr	r3, [r3, #12]
 8000532:	687a      	ldr	r2, [r7, #4]
 8000534:	7912      	ldrb	r2, [r2, #4]
 8000536:	4611      	mov	r1, r2
 8000538:	2201      	movs	r2, #1
 800053a:	408a      	lsls	r2, r1
 800053c:	4611      	mov	r1, r2
 800053e:	4a55      	ldr	r2, [pc, #340]	; (8000694 <GPIO_Init+0x1e0>)
 8000540:	430b      	orrs	r3, r1
 8000542:	60d3      	str	r3, [r2, #12]

			/* Clear the corresponding RTSR */
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000544:	4b53      	ldr	r3, [pc, #332]	; (8000694 <GPIO_Init+0x1e0>)
 8000546:	689b      	ldr	r3, [r3, #8]
 8000548:	687a      	ldr	r2, [r7, #4]
 800054a:	7912      	ldrb	r2, [r2, #4]
 800054c:	4611      	mov	r1, r2
 800054e:	2201      	movs	r2, #1
 8000550:	408a      	lsls	r2, r1
 8000552:	43d2      	mvns	r2, r2
 8000554:	4611      	mov	r1, r2
 8000556:	4a4f      	ldr	r2, [pc, #316]	; (8000694 <GPIO_Init+0x1e0>)
 8000558:	400b      	ands	r3, r1
 800055a:	6093      	str	r3, [r2, #8]
 800055c:	e059      	b.n	8000612 <GPIO_Init+0x15e>
		}
		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	795b      	ldrb	r3, [r3, #5]
 8000562:	2b05      	cmp	r3, #5
 8000564:	d123      	bne.n	80005ae <GPIO_Init+0xfa>
		{
			/* 1. Configure the RTSR */
			/* Clearing */
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000566:	4b4b      	ldr	r3, [pc, #300]	; (8000694 <GPIO_Init+0x1e0>)
 8000568:	689b      	ldr	r3, [r3, #8]
 800056a:	687a      	ldr	r2, [r7, #4]
 800056c:	7912      	ldrb	r2, [r2, #4]
 800056e:	4611      	mov	r1, r2
 8000570:	2201      	movs	r2, #1
 8000572:	408a      	lsls	r2, r1
 8000574:	43d2      	mvns	r2, r2
 8000576:	4611      	mov	r1, r2
 8000578:	4a46      	ldr	r2, [pc, #280]	; (8000694 <GPIO_Init+0x1e0>)
 800057a:	400b      	ands	r3, r1
 800057c:	6093      	str	r3, [r2, #8]
			/* Setting */
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800057e:	4b45      	ldr	r3, [pc, #276]	; (8000694 <GPIO_Init+0x1e0>)
 8000580:	689b      	ldr	r3, [r3, #8]
 8000582:	687a      	ldr	r2, [r7, #4]
 8000584:	7912      	ldrb	r2, [r2, #4]
 8000586:	4611      	mov	r1, r2
 8000588:	2201      	movs	r2, #1
 800058a:	408a      	lsls	r2, r1
 800058c:	4611      	mov	r1, r2
 800058e:	4a41      	ldr	r2, [pc, #260]	; (8000694 <GPIO_Init+0x1e0>)
 8000590:	430b      	orrs	r3, r1
 8000592:	6093      	str	r3, [r2, #8]

			/* Clear the corresponding FTSR */
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000594:	4b3f      	ldr	r3, [pc, #252]	; (8000694 <GPIO_Init+0x1e0>)
 8000596:	68db      	ldr	r3, [r3, #12]
 8000598:	687a      	ldr	r2, [r7, #4]
 800059a:	7912      	ldrb	r2, [r2, #4]
 800059c:	4611      	mov	r1, r2
 800059e:	2201      	movs	r2, #1
 80005a0:	408a      	lsls	r2, r1
 80005a2:	43d2      	mvns	r2, r2
 80005a4:	4611      	mov	r1, r2
 80005a6:	4a3b      	ldr	r2, [pc, #236]	; (8000694 <GPIO_Init+0x1e0>)
 80005a8:	400b      	ands	r3, r1
 80005aa:	60d3      	str	r3, [r2, #12]
 80005ac:	e031      	b.n	8000612 <GPIO_Init+0x15e>
		}
		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	795b      	ldrb	r3, [r3, #5]
 80005b2:	2b06      	cmp	r3, #6
 80005b4:	d12d      	bne.n	8000612 <GPIO_Init+0x15e>
		{

			/* Clearing */
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005b6:	4b37      	ldr	r3, [pc, #220]	; (8000694 <GPIO_Init+0x1e0>)
 80005b8:	68db      	ldr	r3, [r3, #12]
 80005ba:	687a      	ldr	r2, [r7, #4]
 80005bc:	7912      	ldrb	r2, [r2, #4]
 80005be:	4611      	mov	r1, r2
 80005c0:	2201      	movs	r2, #1
 80005c2:	408a      	lsls	r2, r1
 80005c4:	43d2      	mvns	r2, r2
 80005c6:	4611      	mov	r1, r2
 80005c8:	4a32      	ldr	r2, [pc, #200]	; (8000694 <GPIO_Init+0x1e0>)
 80005ca:	400b      	ands	r3, r1
 80005cc:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005ce:	4b31      	ldr	r3, [pc, #196]	; (8000694 <GPIO_Init+0x1e0>)
 80005d0:	689b      	ldr	r3, [r3, #8]
 80005d2:	687a      	ldr	r2, [r7, #4]
 80005d4:	7912      	ldrb	r2, [r2, #4]
 80005d6:	4611      	mov	r1, r2
 80005d8:	2201      	movs	r2, #1
 80005da:	408a      	lsls	r2, r1
 80005dc:	43d2      	mvns	r2, r2
 80005de:	4611      	mov	r1, r2
 80005e0:	4a2c      	ldr	r2, [pc, #176]	; (8000694 <GPIO_Init+0x1e0>)
 80005e2:	400b      	ands	r3, r1
 80005e4:	6093      	str	r3, [r2, #8]

			/* 1. Configure FTSR and RTSR */
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005e6:	4b2b      	ldr	r3, [pc, #172]	; (8000694 <GPIO_Init+0x1e0>)
 80005e8:	68db      	ldr	r3, [r3, #12]
 80005ea:	687a      	ldr	r2, [r7, #4]
 80005ec:	7912      	ldrb	r2, [r2, #4]
 80005ee:	4611      	mov	r1, r2
 80005f0:	2201      	movs	r2, #1
 80005f2:	408a      	lsls	r2, r1
 80005f4:	4611      	mov	r1, r2
 80005f6:	4a27      	ldr	r2, [pc, #156]	; (8000694 <GPIO_Init+0x1e0>)
 80005f8:	430b      	orrs	r3, r1
 80005fa:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005fc:	4b25      	ldr	r3, [pc, #148]	; (8000694 <GPIO_Init+0x1e0>)
 80005fe:	689b      	ldr	r3, [r3, #8]
 8000600:	687a      	ldr	r2, [r7, #4]
 8000602:	7912      	ldrb	r2, [r2, #4]
 8000604:	4611      	mov	r1, r2
 8000606:	2201      	movs	r2, #1
 8000608:	408a      	lsls	r2, r1
 800060a:	4611      	mov	r1, r2
 800060c:	4a21      	ldr	r2, [pc, #132]	; (8000694 <GPIO_Init+0x1e0>)
 800060e:	430b      	orrs	r3, r1
 8000610:	6093      	str	r3, [r2, #8]
		}

		/* 2. Configure the port selection in SYSCFG_EXTICR */
		uint8_t uExtiIndex = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	791b      	ldrb	r3, [r3, #4]
 8000616:	089b      	lsrs	r3, r3, #2
 8000618:	74fb      	strb	r3, [r7, #19]
		uint8_t uExtiPinNumber = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	791b      	ldrb	r3, [r3, #4]
 800061e:	f003 0303 	and.w	r3, r3, #3
 8000622:	74bb      	strb	r3, [r7, #18]
		uint8_t uPortCode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	681b      	ldr	r3, [r3, #0]
 8000628:	4a1b      	ldr	r2, [pc, #108]	; (8000698 <GPIO_Init+0x1e4>)
 800062a:	4293      	cmp	r3, r2
 800062c:	d044      	beq.n	80006b8 <GPIO_Init+0x204>
 800062e:	687b      	ldr	r3, [r7, #4]
 8000630:	681b      	ldr	r3, [r3, #0]
 8000632:	4a1a      	ldr	r2, [pc, #104]	; (800069c <GPIO_Init+0x1e8>)
 8000634:	4293      	cmp	r3, r2
 8000636:	d02b      	beq.n	8000690 <GPIO_Init+0x1dc>
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	4a18      	ldr	r2, [pc, #96]	; (80006a0 <GPIO_Init+0x1ec>)
 800063e:	4293      	cmp	r3, r2
 8000640:	d024      	beq.n	800068c <GPIO_Init+0x1d8>
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	681b      	ldr	r3, [r3, #0]
 8000646:	4a17      	ldr	r2, [pc, #92]	; (80006a4 <GPIO_Init+0x1f0>)
 8000648:	4293      	cmp	r3, r2
 800064a:	d01d      	beq.n	8000688 <GPIO_Init+0x1d4>
 800064c:	687b      	ldr	r3, [r7, #4]
 800064e:	681b      	ldr	r3, [r3, #0]
 8000650:	4a15      	ldr	r2, [pc, #84]	; (80006a8 <GPIO_Init+0x1f4>)
 8000652:	4293      	cmp	r3, r2
 8000654:	d016      	beq.n	8000684 <GPIO_Init+0x1d0>
 8000656:	687b      	ldr	r3, [r7, #4]
 8000658:	681b      	ldr	r3, [r3, #0]
 800065a:	4a14      	ldr	r2, [pc, #80]	; (80006ac <GPIO_Init+0x1f8>)
 800065c:	4293      	cmp	r3, r2
 800065e:	d00f      	beq.n	8000680 <GPIO_Init+0x1cc>
 8000660:	687b      	ldr	r3, [r7, #4]
 8000662:	681b      	ldr	r3, [r3, #0]
 8000664:	4a12      	ldr	r2, [pc, #72]	; (80006b0 <GPIO_Init+0x1fc>)
 8000666:	4293      	cmp	r3, r2
 8000668:	d008      	beq.n	800067c <GPIO_Init+0x1c8>
 800066a:	687b      	ldr	r3, [r7, #4]
 800066c:	681b      	ldr	r3, [r3, #0]
 800066e:	4a11      	ldr	r2, [pc, #68]	; (80006b4 <GPIO_Init+0x200>)
 8000670:	4293      	cmp	r3, r2
 8000672:	d101      	bne.n	8000678 <GPIO_Init+0x1c4>
 8000674:	2308      	movs	r3, #8
 8000676:	e020      	b.n	80006ba <GPIO_Init+0x206>
 8000678:	2300      	movs	r3, #0
 800067a:	e01e      	b.n	80006ba <GPIO_Init+0x206>
 800067c:	2307      	movs	r3, #7
 800067e:	e01c      	b.n	80006ba <GPIO_Init+0x206>
 8000680:	2306      	movs	r3, #6
 8000682:	e01a      	b.n	80006ba <GPIO_Init+0x206>
 8000684:	2304      	movs	r3, #4
 8000686:	e018      	b.n	80006ba <GPIO_Init+0x206>
 8000688:	2303      	movs	r3, #3
 800068a:	e016      	b.n	80006ba <GPIO_Init+0x206>
 800068c:	2302      	movs	r3, #2
 800068e:	e014      	b.n	80006ba <GPIO_Init+0x206>
 8000690:	2301      	movs	r3, #1
 8000692:	e012      	b.n	80006ba <GPIO_Init+0x206>
 8000694:	40013c00 	.word	0x40013c00
 8000698:	40020000 	.word	0x40020000
 800069c:	40020400 	.word	0x40020400
 80006a0:	40020800 	.word	0x40020800
 80006a4:	40020c00 	.word	0x40020c00
 80006a8:	40021400 	.word	0x40021400
 80006ac:	40021800 	.word	0x40021800
 80006b0:	40021c00 	.word	0x40021c00
 80006b4:	40022000 	.word	0x40022000
 80006b8:	2300      	movs	r3, #0
 80006ba:	747b      	strb	r3, [r7, #17]

		/*Enable the clock for SYSCFG */
		SYSCFG_PCLK_EN();
 80006bc:	4b6b      	ldr	r3, [pc, #428]	; (800086c <GPIO_Init+0x3b8>)
 80006be:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80006c0:	4a6a      	ldr	r2, [pc, #424]	; (800086c <GPIO_Init+0x3b8>)
 80006c2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80006c6:	6453      	str	r3, [r2, #68]	; 0x44
		/*Clearing */
		SYSCFG->EXTICR[uExtiIndex] &= ~( 0xFF << (4 * uExtiPinNumber));
 80006c8:	4a69      	ldr	r2, [pc, #420]	; (8000870 <GPIO_Init+0x3bc>)
 80006ca:	7cfb      	ldrb	r3, [r7, #19]
 80006cc:	3302      	adds	r3, #2
 80006ce:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80006d2:	7cbb      	ldrb	r3, [r7, #18]
 80006d4:	009b      	lsls	r3, r3, #2
 80006d6:	21ff      	movs	r1, #255	; 0xff
 80006d8:	fa01 f303 	lsl.w	r3, r1, r3
 80006dc:	43db      	mvns	r3, r3
 80006de:	4618      	mov	r0, r3
 80006e0:	4963      	ldr	r1, [pc, #396]	; (8000870 <GPIO_Init+0x3bc>)
 80006e2:	7cfb      	ldrb	r3, [r7, #19]
 80006e4:	4002      	ands	r2, r0
 80006e6:	3302      	adds	r3, #2
 80006e8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		/*Setting */
		SYSCFG->EXTICR[uExtiIndex] |= ( uPortCode << (4 * uExtiPinNumber));
 80006ec:	4a60      	ldr	r2, [pc, #384]	; (8000870 <GPIO_Init+0x3bc>)
 80006ee:	7cfb      	ldrb	r3, [r7, #19]
 80006f0:	3302      	adds	r3, #2
 80006f2:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80006f6:	7c79      	ldrb	r1, [r7, #17]
 80006f8:	7cbb      	ldrb	r3, [r7, #18]
 80006fa:	009b      	lsls	r3, r3, #2
 80006fc:	fa01 f303 	lsl.w	r3, r1, r3
 8000700:	4618      	mov	r0, r3
 8000702:	495b      	ldr	r1, [pc, #364]	; (8000870 <GPIO_Init+0x3bc>)
 8000704:	7cfb      	ldrb	r3, [r7, #19]
 8000706:	4302      	orrs	r2, r0
 8000708:	3302      	adds	r3, #2
 800070a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		/* 3. Enable EXTI interrupt delivery using IMR */
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800070e:	4b59      	ldr	r3, [pc, #356]	; (8000874 <GPIO_Init+0x3c0>)
 8000710:	681b      	ldr	r3, [r3, #0]
 8000712:	687a      	ldr	r2, [r7, #4]
 8000714:	7912      	ldrb	r2, [r2, #4]
 8000716:	4611      	mov	r1, r2
 8000718:	2201      	movs	r2, #1
 800071a:	408a      	lsls	r2, r1
 800071c:	4611      	mov	r1, r2
 800071e:	4a55      	ldr	r2, [pc, #340]	; (8000874 <GPIO_Init+0x3c0>)
 8000720:	430b      	orrs	r3, r1
 8000722:	6013      	str	r3, [r2, #0]
	}

	/* 2. Configure the speed of the pin */
	val = pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000724:	687b      	ldr	r3, [r7, #4]
 8000726:	799b      	ldrb	r3, [r3, #6]
 8000728:	461a      	mov	r2, r3
 800072a:	687b      	ldr	r3, [r7, #4]
 800072c:	791b      	ldrb	r3, [r3, #4]
 800072e:	005b      	lsls	r3, r3, #1
 8000730:	fa02 f303 	lsl.w	r3, r2, r3
 8000734:	617b      	str	r3, [r7, #20]
	/* Clearing */
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x03 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 8000736:	687b      	ldr	r3, [r7, #4]
 8000738:	681b      	ldr	r3, [r3, #0]
 800073a:	689a      	ldr	r2, [r3, #8]
 800073c:	687b      	ldr	r3, [r7, #4]
 800073e:	791b      	ldrb	r3, [r3, #4]
 8000740:	005b      	lsls	r3, r3, #1
 8000742:	2103      	movs	r1, #3
 8000744:	fa01 f303 	lsl.w	r3, r1, r3
 8000748:	43db      	mvns	r3, r3
 800074a:	4619      	mov	r1, r3
 800074c:	687b      	ldr	r3, [r7, #4]
 800074e:	681b      	ldr	r3, [r3, #0]
 8000750:	400a      	ands	r2, r1
 8000752:	609a      	str	r2, [r3, #8]
	/* Setting */
	pGPIOHandle->pGPIOx->OSPEEDR |= val;
 8000754:	687b      	ldr	r3, [r7, #4]
 8000756:	681b      	ldr	r3, [r3, #0]
 8000758:	6899      	ldr	r1, [r3, #8]
 800075a:	687b      	ldr	r3, [r7, #4]
 800075c:	681b      	ldr	r3, [r3, #0]
 800075e:	697a      	ldr	r2, [r7, #20]
 8000760:	430a      	orrs	r2, r1
 8000762:	609a      	str	r2, [r3, #8]
	val = 0;
 8000764:	2300      	movs	r3, #0
 8000766:	617b      	str	r3, [r7, #20]

	/* 3. Configure the pull up/down settings */
	val = pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000768:	687b      	ldr	r3, [r7, #4]
 800076a:	79db      	ldrb	r3, [r3, #7]
 800076c:	461a      	mov	r2, r3
 800076e:	687b      	ldr	r3, [r7, #4]
 8000770:	791b      	ldrb	r3, [r3, #4]
 8000772:	005b      	lsls	r3, r3, #1
 8000774:	fa02 f303 	lsl.w	r3, r2, r3
 8000778:	617b      	str	r3, [r7, #20]
	/* Clearing */
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x03 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 800077a:	687b      	ldr	r3, [r7, #4]
 800077c:	681b      	ldr	r3, [r3, #0]
 800077e:	68da      	ldr	r2, [r3, #12]
 8000780:	687b      	ldr	r3, [r7, #4]
 8000782:	791b      	ldrb	r3, [r3, #4]
 8000784:	005b      	lsls	r3, r3, #1
 8000786:	2103      	movs	r1, #3
 8000788:	fa01 f303 	lsl.w	r3, r1, r3
 800078c:	43db      	mvns	r3, r3
 800078e:	4619      	mov	r1, r3
 8000790:	687b      	ldr	r3, [r7, #4]
 8000792:	681b      	ldr	r3, [r3, #0]
 8000794:	400a      	ands	r2, r1
 8000796:	60da      	str	r2, [r3, #12]
	/* Setting */
	pGPIOHandle->pGPIOx->PUPDR |= val;
 8000798:	687b      	ldr	r3, [r7, #4]
 800079a:	681b      	ldr	r3, [r3, #0]
 800079c:	68d9      	ldr	r1, [r3, #12]
 800079e:	687b      	ldr	r3, [r7, #4]
 80007a0:	681b      	ldr	r3, [r3, #0]
 80007a2:	697a      	ldr	r2, [r7, #20]
 80007a4:	430a      	orrs	r2, r1
 80007a6:	60da      	str	r2, [r3, #12]
	val = 0;
 80007a8:	2300      	movs	r3, #0
 80007aa:	617b      	str	r3, [r7, #20]

	/* 4. Configure the output type */
	val = pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 80007ac:	687b      	ldr	r3, [r7, #4]
 80007ae:	7a1b      	ldrb	r3, [r3, #8]
 80007b0:	461a      	mov	r2, r3
 80007b2:	687b      	ldr	r3, [r7, #4]
 80007b4:	791b      	ldrb	r3, [r3, #4]
 80007b6:	fa02 f303 	lsl.w	r3, r2, r3
 80007ba:	617b      	str	r3, [r7, #20]
	/* Clearing */
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x01 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 80007bc:	687b      	ldr	r3, [r7, #4]
 80007be:	681b      	ldr	r3, [r3, #0]
 80007c0:	685a      	ldr	r2, [r3, #4]
 80007c2:	687b      	ldr	r3, [r7, #4]
 80007c4:	791b      	ldrb	r3, [r3, #4]
 80007c6:	4619      	mov	r1, r3
 80007c8:	2301      	movs	r3, #1
 80007ca:	408b      	lsls	r3, r1
 80007cc:	43db      	mvns	r3, r3
 80007ce:	4619      	mov	r1, r3
 80007d0:	687b      	ldr	r3, [r7, #4]
 80007d2:	681b      	ldr	r3, [r3, #0]
 80007d4:	400a      	ands	r2, r1
 80007d6:	605a      	str	r2, [r3, #4]
	/* Setting */
	pGPIOHandle->pGPIOx->OTYPER |= val;
 80007d8:	687b      	ldr	r3, [r7, #4]
 80007da:	681b      	ldr	r3, [r3, #0]
 80007dc:	6859      	ldr	r1, [r3, #4]
 80007de:	687b      	ldr	r3, [r7, #4]
 80007e0:	681b      	ldr	r3, [r3, #0]
 80007e2:	697a      	ldr	r2, [r7, #20]
 80007e4:	430a      	orrs	r2, r1
 80007e6:	605a      	str	r2, [r3, #4]
	val = 0;
 80007e8:	2300      	movs	r3, #0
 80007ea:	617b      	str	r3, [r7, #20]

	/* 5. Configure the alt functionality */
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 80007ec:	687b      	ldr	r3, [r7, #4]
 80007ee:	795b      	ldrb	r3, [r3, #5]
 80007f0:	2b02      	cmp	r3, #2
 80007f2:	d134      	bne.n	800085e <GPIO_Init+0x3aa>
	{
		uint8_t uAfrIndex = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 80007f4:	687b      	ldr	r3, [r7, #4]
 80007f6:	791b      	ldrb	r3, [r3, #4]
 80007f8:	08db      	lsrs	r3, r3, #3
 80007fa:	743b      	strb	r3, [r7, #16]
		uint8_t uAfrPinNumber = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 80007fc:	687b      	ldr	r3, [r7, #4]
 80007fe:	791b      	ldrb	r3, [r3, #4]
 8000800:	f003 0307 	and.w	r3, r3, #7
 8000804:	73fb      	strb	r3, [r7, #15]

		val = pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunction << (4 * uAfrPinNumber);
 8000806:	687b      	ldr	r3, [r7, #4]
 8000808:	7a5b      	ldrb	r3, [r3, #9]
 800080a:	461a      	mov	r2, r3
 800080c:	7bfb      	ldrb	r3, [r7, #15]
 800080e:	009b      	lsls	r3, r3, #2
 8000810:	fa02 f303 	lsl.w	r3, r2, r3
 8000814:	617b      	str	r3, [r7, #20]
		/* Clearing */
		pGPIOHandle->pGPIOx->AFR[uAfrIndex] &= ~(0x0F << (4 * uAfrPinNumber));
 8000816:	687b      	ldr	r3, [r7, #4]
 8000818:	681b      	ldr	r3, [r3, #0]
 800081a:	7c3a      	ldrb	r2, [r7, #16]
 800081c:	3208      	adds	r2, #8
 800081e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000822:	7bfb      	ldrb	r3, [r7, #15]
 8000824:	009b      	lsls	r3, r3, #2
 8000826:	220f      	movs	r2, #15
 8000828:	fa02 f303 	lsl.w	r3, r2, r3
 800082c:	43db      	mvns	r3, r3
 800082e:	4618      	mov	r0, r3
 8000830:	687b      	ldr	r3, [r7, #4]
 8000832:	681b      	ldr	r3, [r3, #0]
 8000834:	7c3a      	ldrb	r2, [r7, #16]
 8000836:	4001      	ands	r1, r0
 8000838:	3208      	adds	r2, #8
 800083a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		/* Setting */
		pGPIOHandle->pGPIOx->AFR[uAfrIndex] |= val;
 800083e:	687b      	ldr	r3, [r7, #4]
 8000840:	681b      	ldr	r3, [r3, #0]
 8000842:	7c3a      	ldrb	r2, [r7, #16]
 8000844:	3208      	adds	r2, #8
 8000846:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800084a:	687b      	ldr	r3, [r7, #4]
 800084c:	681b      	ldr	r3, [r3, #0]
 800084e:	7c3a      	ldrb	r2, [r7, #16]
 8000850:	6979      	ldr	r1, [r7, #20]
 8000852:	4301      	orrs	r1, r0
 8000854:	3208      	adds	r2, #8
 8000856:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		val = 0;
 800085a:	2300      	movs	r3, #0
 800085c:	617b      	str	r3, [r7, #20]
	}
}
 800085e:	bf00      	nop
 8000860:	371c      	adds	r7, #28
 8000862:	46bd      	mov	sp, r7
 8000864:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000868:	4770      	bx	lr
 800086a:	bf00      	nop
 800086c:	40023800 	.word	0x40023800
 8000870:	40013800 	.word	0x40013800
 8000874:	40013c00 	.word	0x40013c00

08000878 <GPIO_ToggleOutputPin>:
 *
 * @Note              -
 */

void GPIO_ToggleOutputPin(GPIO_RegDef_t* pGPIOx, uint8_t uPinNumber)
{
 8000878:	b480      	push	{r7}
 800087a:	b083      	sub	sp, #12
 800087c:	af00      	add	r7, sp, #0
 800087e:	6078      	str	r0, [r7, #4]
 8000880:	460b      	mov	r3, r1
 8000882:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << uPinNumber);
 8000884:	687b      	ldr	r3, [r7, #4]
 8000886:	695b      	ldr	r3, [r3, #20]
 8000888:	78fa      	ldrb	r2, [r7, #3]
 800088a:	2101      	movs	r1, #1
 800088c:	fa01 f202 	lsl.w	r2, r1, r2
 8000890:	405a      	eors	r2, r3
 8000892:	687b      	ldr	r3, [r7, #4]
 8000894:	615a      	str	r2, [r3, #20]
}
 8000896:	bf00      	nop
 8000898:	370c      	adds	r7, #12
 800089a:	46bd      	mov	sp, r7
 800089c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008a0:	4770      	bx	lr
	...

080008a4 <GPIO_IRQInterruptConfig>:
/*
 * IRQ configuration and IRQ handling
 */

void GPIO_IRQInterruptConfig(uint8_t uIRQNumber, uint8_t uEnorDi)
{
 80008a4:	b480      	push	{r7}
 80008a6:	b083      	sub	sp, #12
 80008a8:	af00      	add	r7, sp, #0
 80008aa:	4603      	mov	r3, r0
 80008ac:	460a      	mov	r2, r1
 80008ae:	71fb      	strb	r3, [r7, #7]
 80008b0:	4613      	mov	r3, r2
 80008b2:	71bb      	strb	r3, [r7, #6]
    if (uEnorDi == ENABLE)
 80008b4:	79bb      	ldrb	r3, [r7, #6]
 80008b6:	2b01      	cmp	r3, #1
 80008b8:	d133      	bne.n	8000922 <GPIO_IRQInterruptConfig+0x7e>
    {
        if (uIRQNumber <= 31)
 80008ba:	79fb      	ldrb	r3, [r7, #7]
 80008bc:	2b1f      	cmp	r3, #31
 80008be:	d80a      	bhi.n	80008d6 <GPIO_IRQInterruptConfig+0x32>
		{
            /* Programm ISER0 */
			*NVIC_ISER0 |= (1 << uIRQNumber);
 80008c0:	4b35      	ldr	r3, [pc, #212]	; (8000998 <GPIO_IRQInterruptConfig+0xf4>)
 80008c2:	681b      	ldr	r3, [r3, #0]
 80008c4:	79fa      	ldrb	r2, [r7, #7]
 80008c6:	2101      	movs	r1, #1
 80008c8:	fa01 f202 	lsl.w	r2, r1, r2
 80008cc:	4611      	mov	r1, r2
 80008ce:	4a32      	ldr	r2, [pc, #200]	; (8000998 <GPIO_IRQInterruptConfig+0xf4>)
 80008d0:	430b      	orrs	r3, r1
 80008d2:	6013      	str	r3, [r2, #0]
		{
			/* Programm ICER2 */
			*NVIC_ICER2 |= (1 << (uIRQNumber % 64));
		}
	}
}
 80008d4:	e059      	b.n	800098a <GPIO_IRQInterruptConfig+0xe6>
		else if ( (uIRQNumber > 31) && (uIRQNumber < 64) )
 80008d6:	79fb      	ldrb	r3, [r7, #7]
 80008d8:	2b1f      	cmp	r3, #31
 80008da:	d90f      	bls.n	80008fc <GPIO_IRQInterruptConfig+0x58>
 80008dc:	79fb      	ldrb	r3, [r7, #7]
 80008de:	2b3f      	cmp	r3, #63	; 0x3f
 80008e0:	d80c      	bhi.n	80008fc <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= (1 << (uIRQNumber % 32));
 80008e2:	4b2e      	ldr	r3, [pc, #184]	; (800099c <GPIO_IRQInterruptConfig+0xf8>)
 80008e4:	681b      	ldr	r3, [r3, #0]
 80008e6:	79fa      	ldrb	r2, [r7, #7]
 80008e8:	f002 021f 	and.w	r2, r2, #31
 80008ec:	2101      	movs	r1, #1
 80008ee:	fa01 f202 	lsl.w	r2, r1, r2
 80008f2:	4611      	mov	r1, r2
 80008f4:	4a29      	ldr	r2, [pc, #164]	; (800099c <GPIO_IRQInterruptConfig+0xf8>)
 80008f6:	430b      	orrs	r3, r1
 80008f8:	6013      	str	r3, [r2, #0]
 80008fa:	e046      	b.n	800098a <GPIO_IRQInterruptConfig+0xe6>
		else if ( (uIRQNumber >= 64) && (uIRQNumber < 96) )
 80008fc:	79fb      	ldrb	r3, [r7, #7]
 80008fe:	2b3f      	cmp	r3, #63	; 0x3f
 8000900:	d943      	bls.n	800098a <GPIO_IRQInterruptConfig+0xe6>
 8000902:	79fb      	ldrb	r3, [r7, #7]
 8000904:	2b5f      	cmp	r3, #95	; 0x5f
 8000906:	d840      	bhi.n	800098a <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |= (1 << (uIRQNumber % 64));
 8000908:	4b25      	ldr	r3, [pc, #148]	; (80009a0 <GPIO_IRQInterruptConfig+0xfc>)
 800090a:	681b      	ldr	r3, [r3, #0]
 800090c:	79fa      	ldrb	r2, [r7, #7]
 800090e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000912:	2101      	movs	r1, #1
 8000914:	fa01 f202 	lsl.w	r2, r1, r2
 8000918:	4611      	mov	r1, r2
 800091a:	4a21      	ldr	r2, [pc, #132]	; (80009a0 <GPIO_IRQInterruptConfig+0xfc>)
 800091c:	430b      	orrs	r3, r1
 800091e:	6013      	str	r3, [r2, #0]
}
 8000920:	e033      	b.n	800098a <GPIO_IRQInterruptConfig+0xe6>
		if (uIRQNumber <= 31)
 8000922:	79fb      	ldrb	r3, [r7, #7]
 8000924:	2b1f      	cmp	r3, #31
 8000926:	d80a      	bhi.n	800093e <GPIO_IRQInterruptConfig+0x9a>
			*NVIC_ICER0 |= (1 << uIRQNumber);
 8000928:	4b1e      	ldr	r3, [pc, #120]	; (80009a4 <GPIO_IRQInterruptConfig+0x100>)
 800092a:	681b      	ldr	r3, [r3, #0]
 800092c:	79fa      	ldrb	r2, [r7, #7]
 800092e:	2101      	movs	r1, #1
 8000930:	fa01 f202 	lsl.w	r2, r1, r2
 8000934:	4611      	mov	r1, r2
 8000936:	4a1b      	ldr	r2, [pc, #108]	; (80009a4 <GPIO_IRQInterruptConfig+0x100>)
 8000938:	430b      	orrs	r3, r1
 800093a:	6013      	str	r3, [r2, #0]
}
 800093c:	e025      	b.n	800098a <GPIO_IRQInterruptConfig+0xe6>
		else if ( (uIRQNumber > 31) && (uIRQNumber < 64) )
 800093e:	79fb      	ldrb	r3, [r7, #7]
 8000940:	2b1f      	cmp	r3, #31
 8000942:	d90f      	bls.n	8000964 <GPIO_IRQInterruptConfig+0xc0>
 8000944:	79fb      	ldrb	r3, [r7, #7]
 8000946:	2b3f      	cmp	r3, #63	; 0x3f
 8000948:	d80c      	bhi.n	8000964 <GPIO_IRQInterruptConfig+0xc0>
			*NVIC_ICER1 |= (1 << (uIRQNumber % 32));
 800094a:	4b17      	ldr	r3, [pc, #92]	; (80009a8 <GPIO_IRQInterruptConfig+0x104>)
 800094c:	681b      	ldr	r3, [r3, #0]
 800094e:	79fa      	ldrb	r2, [r7, #7]
 8000950:	f002 021f 	and.w	r2, r2, #31
 8000954:	2101      	movs	r1, #1
 8000956:	fa01 f202 	lsl.w	r2, r1, r2
 800095a:	4611      	mov	r1, r2
 800095c:	4a12      	ldr	r2, [pc, #72]	; (80009a8 <GPIO_IRQInterruptConfig+0x104>)
 800095e:	430b      	orrs	r3, r1
 8000960:	6013      	str	r3, [r2, #0]
 8000962:	e012      	b.n	800098a <GPIO_IRQInterruptConfig+0xe6>
		else if ( (uIRQNumber >= 64) && (uIRQNumber < 96) )
 8000964:	79fb      	ldrb	r3, [r7, #7]
 8000966:	2b3f      	cmp	r3, #63	; 0x3f
 8000968:	d90f      	bls.n	800098a <GPIO_IRQInterruptConfig+0xe6>
 800096a:	79fb      	ldrb	r3, [r7, #7]
 800096c:	2b5f      	cmp	r3, #95	; 0x5f
 800096e:	d80c      	bhi.n	800098a <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ICER2 |= (1 << (uIRQNumber % 64));
 8000970:	4b0e      	ldr	r3, [pc, #56]	; (80009ac <GPIO_IRQInterruptConfig+0x108>)
 8000972:	681b      	ldr	r3, [r3, #0]
 8000974:	79fa      	ldrb	r2, [r7, #7]
 8000976:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 800097a:	2101      	movs	r1, #1
 800097c:	fa01 f202 	lsl.w	r2, r1, r2
 8000980:	4611      	mov	r1, r2
 8000982:	4a0a      	ldr	r2, [pc, #40]	; (80009ac <GPIO_IRQInterruptConfig+0x108>)
 8000984:	430b      	orrs	r3, r1
 8000986:	6013      	str	r3, [r2, #0]
}
 8000988:	e7ff      	b.n	800098a <GPIO_IRQInterruptConfig+0xe6>
 800098a:	bf00      	nop
 800098c:	370c      	adds	r7, #12
 800098e:	46bd      	mov	sp, r7
 8000990:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000994:	4770      	bx	lr
 8000996:	bf00      	nop
 8000998:	e000e100 	.word	0xe000e100
 800099c:	e000e104 	.word	0xe000e104
 80009a0:	e000e108 	.word	0xe000e108
 80009a4:	e000e180 	.word	0xe000e180
 80009a8:	e000e184 	.word	0xe000e184
 80009ac:	e000e188 	.word	0xe000e188

080009b0 <GPIO_IRQPriorityConfig>:

void GPIO_IRQPriorityConfig(uint8_t uIRQNumber, uint32_t uIRQPriority)
{
 80009b0:	b480      	push	{r7}
 80009b2:	b085      	sub	sp, #20
 80009b4:	af00      	add	r7, sp, #0
 80009b6:	4603      	mov	r3, r0
 80009b8:	6039      	str	r1, [r7, #0]
 80009ba:	71fb      	strb	r3, [r7, #7]
	/* IPRx register */
	uint8_t uIPRx = uIRQNumber / 4;
 80009bc:	79fb      	ldrb	r3, [r7, #7]
 80009be:	089b      	lsrs	r3, r3, #2
 80009c0:	73fb      	strb	r3, [r7, #15]
	/* Section of IPRx register*/
	uint8_t uIPRSection = uIRQNumber % 4;
 80009c2:	79fb      	ldrb	r3, [r7, #7]
 80009c4:	f003 0303 	and.w	r3, r3, #3
 80009c8:	73bb      	strb	r3, [r7, #14]
	/* Shift amount: highest nibble only implemented out of 8 bits */
	uint8_t uShiftAmount = (8 * uIPRSection) + (8 - NUM_PR_BITS_IMPLEMENTED);
 80009ca:	7bbb      	ldrb	r3, [r7, #14]
 80009cc:	00db      	lsls	r3, r3, #3
 80009ce:	b2db      	uxtb	r3, r3
 80009d0:	3304      	adds	r3, #4
 80009d2:	737b      	strb	r3, [r7, #13]

	*(NVIC_PR_BASEADDR +  uIPRx) |= (uIRQPriority << uShiftAmount);
 80009d4:	7bfb      	ldrb	r3, [r7, #15]
 80009d6:	009b      	lsls	r3, r3, #2
 80009d8:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80009dc:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80009e0:	6819      	ldr	r1, [r3, #0]
 80009e2:	7b7b      	ldrb	r3, [r7, #13]
 80009e4:	683a      	ldr	r2, [r7, #0]
 80009e6:	409a      	lsls	r2, r3
 80009e8:	7bfb      	ldrb	r3, [r7, #15]
 80009ea:	009b      	lsls	r3, r3, #2
 80009ec:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80009f0:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80009f4:	430a      	orrs	r2, r1
 80009f6:	601a      	str	r2, [r3, #0]
}
 80009f8:	bf00      	nop
 80009fa:	3714      	adds	r7, #20
 80009fc:	46bd      	mov	sp, r7
 80009fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a02:	4770      	bx	lr

08000a04 <GPIO_IRQHandling>:

void GPIO_IRQHandling(uint8_t uPinNumber)
{
 8000a04:	b480      	push	{r7}
 8000a06:	b083      	sub	sp, #12
 8000a08:	af00      	add	r7, sp, #0
 8000a0a:	4603      	mov	r3, r0
 8000a0c:	71fb      	strb	r3, [r7, #7]
	/* Clear the EXTI PR register corresponding to the pin number */
	if ( (EXTI->PR) & (1 << uPinNumber) )
 8000a0e:	4b0c      	ldr	r3, [pc, #48]	; (8000a40 <GPIO_IRQHandling+0x3c>)
 8000a10:	695b      	ldr	r3, [r3, #20]
 8000a12:	79fa      	ldrb	r2, [r7, #7]
 8000a14:	2101      	movs	r1, #1
 8000a16:	fa01 f202 	lsl.w	r2, r1, r2
 8000a1a:	4013      	ands	r3, r2
 8000a1c:	2b00      	cmp	r3, #0
 8000a1e:	d009      	beq.n	8000a34 <GPIO_IRQHandling+0x30>
	{
		/* Clear the register by writing 1 to the corresponding pin number */
		EXTI->PR |= (1 << uPinNumber);
 8000a20:	4b07      	ldr	r3, [pc, #28]	; (8000a40 <GPIO_IRQHandling+0x3c>)
 8000a22:	695b      	ldr	r3, [r3, #20]
 8000a24:	79fa      	ldrb	r2, [r7, #7]
 8000a26:	2101      	movs	r1, #1
 8000a28:	fa01 f202 	lsl.w	r2, r1, r2
 8000a2c:	4611      	mov	r1, r2
 8000a2e:	4a04      	ldr	r2, [pc, #16]	; (8000a40 <GPIO_IRQHandling+0x3c>)
 8000a30:	430b      	orrs	r3, r1
 8000a32:	6153      	str	r3, [r2, #20]
	}
}
 8000a34:	bf00      	nop
 8000a36:	370c      	adds	r7, #12
 8000a38:	46bd      	mov	sp, r7
 8000a3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a3e:	4770      	bx	lr
 8000a40:	40013c00 	.word	0x40013c00

08000a44 <__libc_init_array>:
 8000a44:	b570      	push	{r4, r5, r6, lr}
 8000a46:	4d0d      	ldr	r5, [pc, #52]	; (8000a7c <__libc_init_array+0x38>)
 8000a48:	4c0d      	ldr	r4, [pc, #52]	; (8000a80 <__libc_init_array+0x3c>)
 8000a4a:	1b64      	subs	r4, r4, r5
 8000a4c:	10a4      	asrs	r4, r4, #2
 8000a4e:	2600      	movs	r6, #0
 8000a50:	42a6      	cmp	r6, r4
 8000a52:	d109      	bne.n	8000a68 <__libc_init_array+0x24>
 8000a54:	4d0b      	ldr	r5, [pc, #44]	; (8000a84 <__libc_init_array+0x40>)
 8000a56:	4c0c      	ldr	r4, [pc, #48]	; (8000a88 <__libc_init_array+0x44>)
 8000a58:	f000 f820 	bl	8000a9c <_init>
 8000a5c:	1b64      	subs	r4, r4, r5
 8000a5e:	10a4      	asrs	r4, r4, #2
 8000a60:	2600      	movs	r6, #0
 8000a62:	42a6      	cmp	r6, r4
 8000a64:	d105      	bne.n	8000a72 <__libc_init_array+0x2e>
 8000a66:	bd70      	pop	{r4, r5, r6, pc}
 8000a68:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a6c:	4798      	blx	r3
 8000a6e:	3601      	adds	r6, #1
 8000a70:	e7ee      	b.n	8000a50 <__libc_init_array+0xc>
 8000a72:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a76:	4798      	blx	r3
 8000a78:	3601      	adds	r6, #1
 8000a7a:	e7f2      	b.n	8000a62 <__libc_init_array+0x1e>
 8000a7c:	08000ab4 	.word	0x08000ab4
 8000a80:	08000ab4 	.word	0x08000ab4
 8000a84:	08000ab4 	.word	0x08000ab4
 8000a88:	08000ab8 	.word	0x08000ab8

08000a8c <memset>:
 8000a8c:	4402      	add	r2, r0
 8000a8e:	4603      	mov	r3, r0
 8000a90:	4293      	cmp	r3, r2
 8000a92:	d100      	bne.n	8000a96 <memset+0xa>
 8000a94:	4770      	bx	lr
 8000a96:	f803 1b01 	strb.w	r1, [r3], #1
 8000a9a:	e7f9      	b.n	8000a90 <memset+0x4>

08000a9c <_init>:
 8000a9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a9e:	bf00      	nop
 8000aa0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000aa2:	bc08      	pop	{r3}
 8000aa4:	469e      	mov	lr, r3
 8000aa6:	4770      	bx	lr

08000aa8 <_fini>:
 8000aa8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000aaa:	bf00      	nop
 8000aac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000aae:	bc08      	pop	{r3}
 8000ab0:	469e      	mov	lr, r3
 8000ab2:	4770      	bx	lr
